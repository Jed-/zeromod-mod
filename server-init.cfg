// basic server configuration script
// note that some commands are commented out with //, and need to be uncommented and set to a value to work

// optional specific IP for server to use
// serverip N.N.N.N

// optional specific port for server to use
// serverport 28785

// turn masterserver functionality on or off (default: on (1))
// updatemaster 1

// zeromod supports multiple masterservers
// first of all clear masterservers
// resetmasters
// you can add masterservers with addmaster [hostname]
// addmaster sauerbraten.org
// you can set various settings of masterserver with these functions:
// mastername - host of masterserver (default: sauerbraten.org)
// masterport - port of masterserver (default: 28787)
// masterauth - did server use authkeys of this masterserver? change only if you know what you are doing (default: 1)
// masterauthdesc - select domain of masterserver authkeys. change only if you know what you are doing (default: "")
// masterreg - should we register to this masterserver? if you do not register, gbans won't work, but authkeys will work.
// change only if you know what you are doing. (default: 1)
// masterban - should we use gbans from masterserver? modify if you know what you are doing.
// you shouldn't modify this one, because sauerbraten.org doesn't ban for nothing. (default: 1)
// example:
//   resetmasters
//   // for official masterserver
//   addmaster
//   // for alternate masterserver (crapmod) in case official not works
//   addmaster
//   mastername crapmod.net

// maximum number of allowed clients
// maxclients 8

// maximum number of allowed clients with same ip
// maxdupclients 8

// maximum number of bots a master can add - admins are unaffected by this limit
// set to 0 to disallow bots
// serverbotlimit 8

// controls whether or not the server is intended for "public" use
// when set to 0, allows "setmaster 1" and locked/private mastermodes (for coop-editing and such)
// when set to 1, can only gain master by "auth" or admin, and doesn't allow locked/private mastermodes
// when set to 2, allows "setmaster 1" but disallows private mastermode (for public coop-editing)
// publicserver 0

// description server shows for the server browser
serverdesc "Server name"

// password required to connect to the server
// generally unnecessary unless you really don't want anyone connecting to your server
// using the serverauth option allows people with an appropriate local authkey to connect regardless
// serverpass ""

// password that allows you to gain admin by "setmaster password_here"
// local authkeys are more secure than this and should be used instead if possible
// adminpass ""

// password for privilege master
// masterpass ""

//auth system configuration
exec users.cfg

// optional message of the day to send to players on connect
servermotd "Message of the day"

// controls whether admin privs are necessary to record a demo
// when 1 requires admin (default)
// when 0 only requires master
restrictdemos 0

// maximum number of demos the server will store
// maxdemos 5

// maximum size a demo is allowed to grow to in megabytes
// maxdemosize 16

// controls whether admin privs are necessary to pause a game
// when 1 requires admin (default)
// when 0 only requires master
restrictpausegame 0

// controls whether admin privs are necessary to set game speed
// when 1 requires admin (default)
// when 0 only requires master
restrictgamespeed 0

// whether or not to allow players to vote on maps not in the rotation
// when 1 requires master
// when 2 requires admin
// when 0 allows any votes (default)
// lockmaprotation 0

ffamaps = [
complex douze ot academy metl2 metl3 justice turbine hashi mbt2 fanatic_quake dock renegade curvy_castle nmp8 tartech aard3c
skrdm1 bvdm_01 outpost park tumwalk industry injustice mbt10 curvedm kalking1 hog2 kffa fragplaza collusion duel8 alithia island
frozen memento neondevastation alloy ruine DM_BS1 shinmei1 osiris sdm1 powerplant oasis metl4 ruby shindou dune gubo teahupoo
rm5 depot masdm orbe torment legazzo fury mbt9 refuge shadowed dirtndust force killfactory moonlite castle_trap orion ogrosupply
nucleus elegy shiva arbana simplicity pitch_black duel7 suburb roughinery stemple tejen pgdm deathtek hades corruption paradigm lostinspace
sauerstruck phosgene neonpanic akaritori konkuri-to katrez_d oddworld guacamole wake5 frostbyte thor aqueducts ksauer1 kmap5 thetowers darkdeath wdcd
]
capturemaps = [
urban_c nevil_c fb_capture collusion c_valley lostinspace fc3 face-capture nmp4 nmp8 hallo tempest monastery alithia hades fc4 relic
fc5 paradigm corruption asteroids ogrosupply reissen akroseum turbulence frostbyte c_egypt caribbean dust2 campo dirtndust damnation arabic spcr
nucleus evilness subterra snapper_rocks kopenhagen asgard mbt12 cwcastle nitro suburb haste valhalla abbey venice mercury core_transfer hidden
forge eternal_valley tortuga core_refuge infamy capture_night river_c serenity xenon nmp9 ph-capture killcore3 twinforts duomo donya
]
ctfmaps = [
hallo flagstone tempest siberia reissen tejen shipwreck authentic urban_c bt_falls valhalla garden mbt1 autumn akroseum face-capture dust2
mach2 evilness turbulence l_ctf twinforts berlin_wall mbt12 europium abbey redemption damnation forge campo nitro infamy catch22 subterra
forgotten nucleus bad_moon snapper_rocks haste spcr asgard mill capture_night arbana hidden eternal_valley mercury kopenhagen tortuga mbt4 core_refuge core_transfer
desecration recovery wdcd suburb xenon sacrifice
]
// default maprotation, disabled by default
defrot = [
	maprotationreset
	maprotation "*" $ffamaps
	maprotation "?capture ?hold" $capturemaps
	maprotation "?ctf ?protect ?collect" $ctfmaps
]
// savanha's maprotation, with specific maps for each mode, enabled by default
savrot = [
	maprotationreset
	maprotation "?efficctf ?efficcollect" "forge reissen redemption haste forgotten dust2 arbana" // 7
	maprotation "?instactf ?instacollect" "forge reissen redemption capture_night l_ctf dust2 bad_moon arbana" // 8
	maprotation "?teamplay" "hades corruption curvedm npm8 npm4" // 5
	maprotation "?efficteam ?instateam" "reissen forge hades dust2 capture_night" // 5
	maprotation "?efficprotect" "forge reissen redemption haste forgotten dust2 arbana l_ctf" // 8
	maprotation "?instaprotect" "forge reissen redemption capture_night dust2 l_ctf bad_moon arbana" // 8
	maprotation "?effichold" "forge reissen redemption haste forgotten dust2 arbana l_ctf dirtndust" // 9
	maprotation "?instahold" "forge reissen redemption capture_night l_ctf dust2 bad_moon arbana dirtndust" // 9
	maprotation "?capture ?regencapture" "forge reissen collusion nevil_c nmp4 campo corruption dust2" // 8
	maprotation "?protect" "forge reissen damnation siberia tejen dust2 arbana capture_night" // 8
	maprotation "?hold" "forge reissen damnation siberia tejen dust2 arbana capture_night dirtndust" // 9
	maprotation "?ctf ?collect" "forge reissen damnation siberia tejen dust2 arbana capture_night" // 8
	maprotation "?effic" "turbine ot memento academy frozen kffa aard3c force dune dock" // 10
	maprotation "?insta" "turbine ot complex academy douze kffa force dune dock" // 9
	maprotation "?ffa" "metl2 metl3 elegy hades nmp8 fragplaza douze dock academy" // 9
	maprotation "?tac ?tacteam" "turbine ot memento academy frozen kffa aard3c force dune dock" // 10
]
savrot
// uncomment if you want default maprotation
// defrot
teamkillkickreset
teamkillkick "*" 7 30
teamkillkick "?capture" 10 30

// specifies name of server administrator(s) (will be visible then #info is executed)
// serveradmin ""

// changes the way server deletes bots then changing map
// then set to 0, server doesn't clears bots then changing map
// then set to 1 (default), server deletes all bots then changing map
// clearbots 1

// changes default gamespeed (in %)
// servergamespeed 100

// changes default game length (in minutes)
// servergamelimit 10

// if set to 1 server increases game length by 50% in teammodes (teamplay, instateam, efficteam, capture and regen capture)
// serverovertime 0

// if set to 1 server hides clients ip in csl and similar applications
// if set to 0 (default) server dont hide them
serverhideip 1

// controls server intermission interval (in secconds)
// serverintermission 10

// controls if server shows best stats
// if set to 0 server doesnt show best stats
// if set to 1 (default) server show them
// beststats 1

// controls if server suggest players using #np
// 1 (default) - server suggest, 0 - it doesnt
// serversuggestnp 1

// controls default demos recording behavour
// 0 (default) - demos arent recorded
// 1 - demos are recorded by default
// recorddemo 0

// controls which characrers are interepted as command start characters
// commandchars "#"

// sets max map size accepted by server in megabytes
// -1 disables limit, 0 disables /sendmap
// maxsendmap 4

// forcibly spectates players with modified map
// 0: disabled; 1: spectates for one match; 2: pernamently spectate (player can unspectate only after reconnect)
// serverspecmod 0

// enables or diables votekick
// 1 - enable votekick
// 0 - disable votekick (default)
votekick 1

// controls anticheat behavour
// 0 disables anticheat
// 1 enables warnings for anticheat
// 2 enables disconnecting cheaters
// 3 enables warnings for experimental cheat detection functions (default)
// 4 enables disconnecting for experimental cheat detections
// anticheat 3

// controls anticheat messaging
// 0 anticheat information is visible for everyone
// 1 masters and admins gets informed about cheating (may be useful for public servers)
// 2 only admins gets informed about cheating (default)
// anticheatmessages 2

// controls if nodamage feature is enabled in server and what is default value of nodamage
// if set to 0, nodamage is disabled (default)
// if set to 1, nodamage is enabled
// if set to 2, nodamage is enabled and can be set for editmuted players too
// disabledamage 0

// sets default game mode
// mastermodes: 0:ffa (default), 1:coop, 2:teamplay, 3:insta, 4:instateam, 5:effic, 6:efficteam, 7:tac,
// 8:tacteam, 9:capture, 10:regcapture, 11:ctf, 12:ictf, 13:protect, 14:instaprotect, 15:hold,
// 16:instahold, 17:ectf, 18:efficprotect, 19:effichold, 20:collect, 21:instacollect, 22:efficcollect
// defaultgamemode 0

// sets default mastermode
// -1:auth, 0:open (default), 1:veto, 2:locked, 3:private, 4:password
// defaultmastermode 0

// controls privilege hiding behavour (like hidden admin, etc)
// 0:privilege hidding is disabled (default)
// 1:hide admins and higher, 2:hide local auths and higher
// serverhidepriv 0

// maximum allowed password attempts, 0 - disabled
// maxpassfail 16

// clears teamkilling messages (should be done before adding new messages)
// teamkillmessagereset

// adds teamkilling messages (server sends them to teamkiller then teamkill is done)
// teamkillmessage "modes" "message"

// controls default persistent teams behavour
// persistteams 0

// enables server flagruns recording (it will write to flagruns.cfg at exit, and load from same file at startup)
serverflagruns 1

// clears pernament bans
// clearpbans

// adds pernament ban for ip with reason (can ban ranges of ips too)
// addpban 127 "localhosts" // 127.0.0.0/8 is banned
// addpban 192.168 "LAN"    // 192.168.0.0/16 is banned

// controls if server should show multikills/rampages
allowmultikill 1

// controls the amount of players needed for the server to lock master
// autolockmaster 16

// function called when a multikill or rampage is scored
// used to show the messages, if 'showmultikill' is not defined, a default message is shown
showmultikill = [ // args: cn rampage multikills
	cn = $arg1; rampage = $arg2; multikills = $arg3
	name = (getclientcolorname $cn)
	if (= $multikills 2) [
		msg (concatword "^f0" $name "^f7 scored a ^f1Double Kill^f7!")
	]
	if (= $multikills 3) [
		msg (concatword "^f0" $name "^f7 scored a ^f1Triple Kill^f7!")
	]
	if (= $multikills 4) [
		msg (concatword "^f0" $name "^f7 scored a ^f1QuadKill^f1!")
	]
	if (= $multikills 5) [
		msg (concatword "^f0" $name "^f7 scored a ^f1PentaKill^f1!")
	]
	if (= $rampage 5) [
		msg (concatword "^f0" $name "^f7 is on a ^f1killing spree^f7!")
	]
	if (= $rampage 10) [
		msg (concatword "^f0" $name "^f7 is on a ^f1rampage^f7!")
	]
	if (= $rampage 15) [
		msg (concatword "^f0" $name "^f7 is ^f1dominating^f7!")
	]
	if (= $rampage 20) [
		msg (concatword "^f0" $name "^f7 is ^f1unstoppable^f7!")
	]
	if (= $rampage 30) [
		msg (concatword "^f0" $name "^f7 is ^f1pwning^f7!")
	]
]

// function called when somebody says hi to a barman
// a barman is a bot, that is always spectator, that can do some things
// admins can add a barman with #addbot [name] and delete it with #delbot, to make the barman permanent, use #forcebot 1
barhi = [ // args: botcn clientcn
	botcn = $arg1
	cn = $arg2
	fakesay $botcn (concatword "Hey " (at (getclientcolorname $cn) 0) "!")
]
// function called when somebody claims privilege via auth
// giving 1 beer to masters, 2 beers to gauthers, and 3 beers to admins
barbeer = [ // args: botcn cn num
	botcn = $arg1
	cn = $arg2
	num = $arg3
	fakesay $botcn (concatword "Welcome " (? (>= $num 3) "on your server " "") (at (getclientcolorname $cn) 0) "! Here" (? (!= $num 1) " are " "'s ") (? (!= $num 1) $num "a") " beer" (? (!= $num 1) "s" "") " for you!")
	offer $botcn $cn (? (= $num 1) "beer" "beers") $num
]

// clears all the 'hi' messages for the barman
resethistrings

// 'hi' messages for the barman
histring "hi"
histring "hey"
histring "hello"

// clears all the drinks
resetdrinks

// drinks
adddrink "beer" "beers"

// command given to a barman to drink something
// drinkcmd "give"

// function called when an invalid name/clientnum is given to a barman
barwho = [ // args: botcn cn who
	botcn = $arg1
	cn = $arg2
	who = $arg3
	fakesay $botcn (concatword (at (getclientcolorname $cn) 0) ", who is " $who "?")
]

// function called when the barman can't understand the number
barnum = [ // args: botcn cn
	botcn = $arg1
	cn = $arg2
	fakesay $botcn (concatword "How many, " (at (getclientcolorname $cn) 0) "?")
]

// function called when somebody asks the menu to a barman
barlist = [ // args: botcn cn list
	botcn = $arg1
	cn = $arg2
	list = $arg3
	fakesay $botcn (concatword "Here's the menu, " (at (getclientcolorname $cn) 0) ": " $list)
]

// function called when the item is not on the menu
barunlisted = [ // args: botcn cn item
	botcn = $arg1
	cn = $arg2
	item = $arg3
	fakesay $botcn (concatword "Sorry " (at (getclientcolorname $cn) 0) ", " $item " is not on the menu")
]

// function called when somebody wants to drink something
bardrink = [ // args: botcn cn item howmuch fromcn
	botcn = $arg1
	cn = $arg2
	item = $arg3
	howmuch = $arg4
	fromcn = $arg5
	fakesay $botcn (concatword "Here" (? (= $howmuch 1) "'s" " are") (? (= $cn $tocn) " your " (concatword " " (? (= $howmuch 1) "a" $howmuch) " ")) $item (? (= $cn $tocn) (concatword ", " (at (getclientcolorname $cn) 0)) (concatword " for " (at (getclientcolorname $cn) 0))) "!")
	offer $fromcn $cn $item $howmuch
]

// the message shown when somebody connects
connectmsg "connected from"

// controls if the server should enable fakesay against human clients
// even if set to 1, it's impossible to use fakesay against authers and admins
enablefakesay 0

// controls if the server should send the scores for each player to an online scoreboard at intermission
sendscores 1

// necessary to send the scores, is the name of the command invoked by the server to download the web page, sending the scores to it
dlcmd "wget -O .tmp --"

// the web page the server connects to send the scores
// the url is this: http://$scoreboardurl?a=g&p=$scoreboardpass&n=name&f=frags&d=deaths&tots=total_shots&totd=total_damage&s=suicides&t=teamkills&l=flags
scoreboardurl "localhost"

// the password the web page should accept
scoreboardpass ""

// load some modules, like geoip
zload geoip
